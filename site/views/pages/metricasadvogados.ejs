<!DOCTYPE html>
<html lang="en">

<head>
    <link rel="icon" href="img/favicon.ico.png" type="image/png">
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Métricas</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">

    <link rel="stylesheet" href="css/metricas.css">
    <link rel="stylesheet" href="css/styles.css">
    <link rel="stylesheet" href="css/profile.css">
    <link href='https://fonts.googleapis.com/css?family=Brawler' rel='stylesheet'>
    <script src="js/navbar.js"></script>
</head>

<body>
    <header id="header-site">
        <nav class="navbar navbar-expand-md navbar-dark navbar-color-primary" style="width: 85%; float: right;">
            <div class="container-fluid">
                <a class="navbar-brand" href="home">
                    <img src="img/Logo-SemFundo.svg" width="120" height="100" class="d-inline-block align-center"
                        alt="">
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse"
                    aria-controls="navbarCollapse" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarCollapse">
                    <ul class="navbar-nav ms-auto mb-2 mb-md-0">
                        <li class="nav-item">
                            <a class="nav-link" aria-current="page" href="contact">Contato</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="marketplace">Buscar Advogado</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="chat">Chat</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="userName" onclick="deslogar()">Logoff</a>
                        </li>

                    </ul>
                </div>
            </div>
        </nav>

    </header>

    <div id="conteudo">

        <div id="kpis">
            <div id="kpi1">
                <h5>Total Clientes</h5>
                <h2 id="allClients">0</h2>
            </div>

            <div id="kpi2">
                <h5>Visitas</h5>
                <h2 id="allVisits">0</h2>
            </div>

            <div id="kpi3">
                <h5>Contatos</h5>
                <h2 id="allContatcs">0</h2>
            </div>

            <div id="kpi4">
                <h5>Casos em andamento</h5>
                <h2 id="allCases">0</h2>
            </div>

        </div>

        <div id="espaco_chart1" style="height: 280px; width: 100%;">
            <canvas id="grafico1" style="height: 280px; width: 1040px;"></canvas>
        </div>

        <div id="espaco_chart2" style="height: 280px; width: 100%;">
            <canvas id="grafico2" style="height: 280px; width: 1040px;"></canvas>
        </div>

    </div>

    <div class="menu_lateral">
        <ul class="ul">
            <li><b>Métricas:</b></li>
            <li><a href="link"><img id="img_barra_lateral" src="img/NotePencil.png" alt="">Mensais</a></li>
            <ul id="espaco_barra_lateral"></ul>
            <li><a href="link"><img id="img_barra_lateral" src="img/User.png" alt="">Perfil</a></li>
            <li><a href="link"><img id="img_barra_lateral" src="img/notificacao.png" alt="">Notificações</a></li>
            <li><a href="link"><img id="img_barra_lateral" src="img/Gear.png" alt="">Configurações</a></li>
            <li><a href="link"><img id="img_barra_lateral" src="img/Question.png" alt="">FAQ</a></li>
            <li><a href="/"><img id="img_barra_lateral" src="img/exit.png" alt="">Sair</a></li>
        </ul>
    </div>

</body>

</html>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    window.onload = function () {
        document.getElementById("userName").innerHTML = sessionStorage.getItem("userName");
    }


    var id = sessionStorage.getItem("userId");
    var apiUrl = 'https://project-lawlinkup-5yraro2lta-uc.a.run.app';
    var dadosAcessos = [{}]
    var dadosContatos = [{}]

    function allClients() {
        fetch(`${apiUrl}/dashboard/todosContatos/${id}`, {
            method: "GET",
        }).then(response => {
            if (response.ok) {
                return response.json();
            } else {
                throw new Error('Erro na requisição');
            }
        }).then(data => {
            var dataResult = data.toString()
            if (dataResult > 0) {
                return document.getElementById("allClients").textContent = dataResult
            }
        }).catch(error => {
            console.log(error);
        });
    }
    function searchAllContatcs() {
        fetch(`${apiUrl}/dashboard/todosContatos/${id}`, {
            method: "GET",
        }).then(response => {
            if (response.ok) {
                return response.json();
            } else {
                throw new Error('Erro na requisição');
            }
        }).then(data => {
            var dataResult = data.toString()
            if (dataResult > 0) {
                return document.getElementById("allContatcs").textContent = dataResult
            }
        }).catch(error => {
            console.log(error);
        });
    }
    function allVisits() {
        fetch(`${apiUrl}/dashboard/quantidadeVisitas/${id}`, {
            method: "GET",
        }).then(response => {
            if (response.ok) {
                return response.json();
            } else {
                throw new Error('Erro na requisição');
            }
        }).then(data => {
            var dataResult = data.toString()
            if (dataResult > 0) {
                return document.getElementById("allVisits").textContent = dataResult
            }
        }).catch(error => {
            console.log(error);
        });
    }
    function allCases() {
        fetch(`${apiUrl}/dashboard/totalCasosEmAndamento/${id}`, {
            method: "GET",
        }).then(response => {
            if (response.ok) {
                return response.json();
            } else {
                throw new Error('Erro na requisição');
            }
        }).then(data => {
            var dataResult = data.toString()
            if (dataResult > 0) {
                return document.getElementById("allCases").textContent = dataResult
            }
        }).catch(error => {
            console.log(error);
        });
    }

    function updateChartWithData(data) {
        const mesesNomes = ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'];

        const meses = data.map(item => {
            const dataCompleta = new Date(item.mesAno + '-02');
            const mes = dataCompleta.getMonth();
            const nomeMes = mesesNomes[mes];
            return nomeMes;
        });
        const quantidadeTotal = data.map(item => item.quantidadeTotal);
        myChart.data.labels = meses;
        myChart.data.datasets[0].data = quantidadeTotal;
        myChart.update();
    }


    function atualizarGraficoQtdAcessosVinculosMensais(dadosAcessos, dadosContatos) {
        const mesesNomes =
            ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'];

        const mesesDistintos = new Set([
            ...dadosAcessos.map(item => item.mesAno),
            ...dadosContatos.map(item => item.mesAno)
        ]);

        const mesesOrdenados = Array.from(mesesDistintos).sort();

        const meses = mesesOrdenados.map(mesAno => {
            const dataCompleta = new Date(mesAno + '-02');
            const mes = dataCompleta.getMonth();
            return mesesNomes[mes];
        });

        const quantidadeTotalAcessos = mesesOrdenados.map(mesAno => {
            const dados = dadosAcessos.find(item => item.mesAno === mesAno);
            return dados ? dados.quantidadeTotal : 0;
        });

        const quantidadeTotalContatos = mesesOrdenados.map(mesAno => {
            const dados = dadosContatos.find(item => item.mesAno === mesAno);
            return dados ? dados.quantidadeTotal : 0;
        });


        myChartTwo.data.labels = meses
        myChartTwo.data.datasets[0].data = quantidadeTotalContatos;

        myChartTwo.data.datasets[1].data = quantidadeTotalAcessos;

        myChartTwo.update();
    }

    function getDataFromAPI() {
        var apiUrl2 = `${apiUrl}/dashboard/quantidadeCasosMensais/${id}`;
        return fetch(apiUrl2)
            .then(response => {
                if (!response.ok) {
                    throw new Error('Erro ao obter dados da API');
                }
                return response.json();
            })
            .then(data => {
                dadosAcessos = data
                updateChartWithData(data)
            })
            .catch(error => {
                console.error(error);
            });
    }

    function buscarDadosQuantidadeVisitasMensais() {
        var apiUrl2 = `${apiUrl}/dashboard/quantidadeVisitasMensais/${id}`;
        return fetch(apiUrl2)
            .then(response => {
                if (!response.ok) {
                    throw new Error('Erro ao obter dados da API');
                }
                return response.json();
            })
            .then(data => {
                dadosContatos = data
            })
            .catch(error => {
                console.error(error);
            });
    }

    function atualizarGrafico() {
        atualizarGraficoQtdAcessosVinculosMensais(dadosAcessos, dadosContatos)
    }


    function obterDadosAcessosEVisitas() {
        Promise.all([getDataFromAPI(), buscarDadosQuantidadeVisitasMensais()])
            .then(() => {
                atualizarGrafico();
            })
            .catch(error => {
                console.error(error);
            });
    }


    searchAllContatcs();
    allVisits();
    allClients();
    allCases();
    getDataFromAPI();
    obterDadosAcessosEVisitas();

    setInterval(() => {
        searchAllContatcs();
        allVisits();
        allClients();
        allCases();
        getDataFromAPI();
        obterDadosAcessosEVisitas();
    }, 5000)


    const ctx = document.getElementById('grafico1');

    Chart.defaults.font.size = 18;



    // for(i++ )

    var myChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: [],
            datasets: [{
                backgroundColor: 'rgb(224, 113, 47)',
                borderColor: 'rgb(224, 113, 47)',
                pointBorderColor: "#E0712F",
                pointBackgroundColor: "#FFFF",
                pointBorderWidth: 2,
                pointHoverRadius: 4,
                pointHoverBorderWidth: 1,
                pointRadius: 4,
                BackgroundColor: "#E0712F",
                label: 'Casos',
                data: [],
                borderWidth: 2
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            },
            plugins: {
                legend: {
                    display: true,
                    position: "bottom",
                    align: "center"
                },
                title: {
                    font: { weight: 'bold' },
                    color: 'rgb(0,78,218)',
                    display: true,
                    text: 'Quantidade de casos mensais',
                    padding: {
                        top: 10,
                        bottom: 10
                    }
                }
            }
        }
    }
    );


    const ctx2 = document.getElementById('grafico2');

    var myChartTwo = new Chart(ctx2, {
        type: 'line',
        data: {
            labels: [],
            datasets: [{
                backgroundColor: 'rgb(224, 113, 47)',
                borderColor: 'rgb(224, 113, 47)',
                pointBorderColor: "#E0712F",
                pointBackgroundColor: "#FFFF",
                pointBorderWidth: 2,
                pointHoverRadius: 4,
                pointHoverBorderWidth: 1,
                pointRadius: 4,
                BackgroundColor: "#E0712F",
                label: 'Qtd. Acessos',
                data: [],
                borderWidth: 2
            },
            {
                backgroundColor: 'rgb(154,128,83)',
                borderColor: 'rgb(154,128,83)',
                pointBorderColor: "#9A8053",
                pointBackgroundColor: "#FFFF",
                pointBorderWidth: 2,
                pointHoverRadius: 4,
                pointHoverBorderWidth: 1,
                pointRadius: 4,
                BackgroundColor: "#E0712F",
                label: 'Contatos',
                data: [],
                borderWidth: 2,
            }
            ]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            },
            plugins: {
                legend: {
                    display: true,
                    position: "bottom",
                    align: "center"
                },
                title: {
                    font: { weight: 'bold' },
                    color: 'rgb(0,78,218)',
                    display: true,
                    text: 'Acessos X Contatos',
                    padding: {
                        top: 10,
                        bottom: 10
                    }
                }
            }
        }
    }
    );


    function updateGraphic(newData) {
        myChart.data.datasets[0].data = newData
        myChartTwo.data.datasets[0].data = newData
        myChart.update();
        myChartTwo.update();
    }


</script>