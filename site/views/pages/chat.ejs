<!DOCTYPE html>
<html lang="en">

<head>
    <link rel="icon" href="img/favicon.ico.png" type="image/png">
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat-LawLinkup</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
    <link rel="stylesheet" href="css/styles.css">
    <link rel="stylesheet" href="css/chat.css">
    <link href='http://fonts.googleapis.com/css?family=Roboto' rel='stylesheet' type='text/css'>
    <link href='https://fonts.googleapis.com/css?family=Brawler' rel='stylesheet'>
    <script src="js/navbar.js"></script>
</head>

<body>
    <header id="header-site">
        <nav class="navbar navbar-expand-md navbar-dark navbar-color-primary" style="font-family: 'Roboto' ;">
            <div class="container-fluid">
                <a class="navbar-brand" href="home">
                    <img src="img/Logo-SemFundo.svg" width="120" height="100" class="d-inline-block align-center"
                        alt="">
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse"
                    aria-controls="navbarCollapse" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarCollapse">
                    <ul class="navbar-nav ms-auto mb-2 mb-md-0">
                        <li class="nav-item">
                            <a class="nav-link" aria-current="page" href="contact">Contato</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="marketplace">Buscar Advogado</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="chat">Chat</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="userName" href="#equipe">Nome_Cliente</a>
                        </li>

                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <div class="main-no-scroll">
        <div class="div_chat">
            <div class="div_contatos">
                <div class="div_perfil">
                    <div class="div_foto">
                        <img id = "foto_usuario" src="img/foto_perfil_default.png" class="foto_perfil_img" alt="">
                    </div>
                    <div class="div_info">
                        <div id="nome_usuario" class="div_nome">Carlos Augusto</div>
                        <div id="info_usuario" class="div_caso">Minhas informações</div>
                    </div>
                </div>

                <div class="div_pesquisa">
                    <input type="search" class="i_pesquisa" placeholder="Pesquisar Conversa">
                </div>

                <div class="chats">

                </div>
            </div>
            <div class="div_mensagens">
                <div id="remetente" class="div_correspondente">

                </div>
                <div id="box_mensagens" class="mensagens">

                    <!-- <div class="div_mensagem1">
                        Lorem ipsum dolor sit amet consectetur adipisicing elit. Quaerat, numquam animi?
                    </div>
                    <div class="div_mensagem2">
                        Lorem ipsum dolor sit amet consectetur adipisicing elit. Quaerat, numquam animi?
                    </div> -->
                </div>


                <div class="div_enviar" id="input_enviar" style="display: none;">
                    <input id="message" type="text" class="i_enviar-mensagem" placeholder="Digite algo">
                    <button id="btn_enviar" class="btn_enviar"><img src="img/Arrow 5.svg"></button>
                </div>
            </div>
        </div>
    </div>



    <!-- <script src="../assets/dist/js/bootstrap.bundle.min.js"></script> -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4"
        crossorigin="anonymous"></script>

</body>

</html>

<script src="https://cdn.socket.io/4.5.4/socket.io.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.js"></script>
<script src="../js/chat.js"></script>

<script>
    var chatAtual = null;
    const idUsuario = sessionStorage.getItem("userId");

    if (typeof io !== 'undefined') {
        var socket = io({ path: '/socket' });
    } else {
        console.error('Socket.IO não está carregado corretamente.');
    }

    socket.on('updateSocketId', function (data) {
        updateSocketId(idUsuario, data)
    })

    socket.on('receivedMessage', function (data) {
        if (data.idVinculo == chatAtual.idVinculo) {
            renderMessage(data.mensagem)
        }
    })

 async function sendMessage(){
        var mensagem = $('input[id=message]').val();

        if (mensagem.length) {

            socketId = await buscarSocketId(chatAtual.chatUserId)


            var messageObject = {
                mensagem: mensagem,
                socketId: socketId,
                idVinculo: chatAtual.idVinculo
            };


            statusCode = await registrarMensagem(chatAtual.idVinculo, idUsuario, chatAtual.chatUserId, mensagem)
            if (statusCode != 201 && statusCode != 200) {
                alert("Houve um erro ao enviar a mensagem!")
                return
            }
            socket.emit('sendMessage', messageObject)
            renderMyMessage(messageObject.mensagem);
        }
        document.getElementById("message").value = ""
        document.getElementById("box_mensagens").scrollTop = document.getElementById("box_mensagens").scrollHeight
    }

    function renderMyMessage(mensagem) {
        $('.mensagens').append(`<div class="div_mensagem2">${mensagem}</div>`)
    }

    function renderMessage(mensagem) {
        $('.mensagens').append(`<div class="div_mensagem1">${mensagem}</div>`)
    }

    $('#btn_enviar').click(async function (event) {
        event.preventDefault();
        sendMessage()
    });

    $('#message').keydown(async function (event) {
        if (event.key == "Enter") {
            sendMessage();
        } else {
            // Se não for a tecla "Enter", o comportamento padrão deve ser permitido
            return true;
        }
    });


    window.onload = function () {
        alterarNavbar()
        carregarChats()
    }

    async function carregarChats() {
        const userType = sessionStorage.getItem("userType");
        const vinculos = userType == "cliente" ? await getVinculosCliente(idUsuario) : await getVinculosAdvogado(idUsuario)

        const chats = []

        console.log(vinculos)

        if (userType == "cliente") {
            vinculos.forEach(vinculo => {
                chats.push({
                    idVinculo: vinculo.idVinculo,
                    situacao: vinculo.situacao,
                    user: vinculo.advogado.nome,
                    chatUserId: vinculo.advogado.idUsuario,
                    caso: vinculo.caso.servico,
                    socket: vinculo.advogado.socketId
                })
            })
        } else {
            vinculos.forEach(vinculo => {
                chats.push({
                    idVinculo: vinculo.idVinculo,
                    situacao: vinculo.situacao,
                    user: vinculo.caso.cliente.nome,
                    chatUserId: vinculo.caso.cliente.idUsuario,
                    caso: vinculo.caso.servico,
                    socket: vinculo.caso.cliente.socketId
                })
            })
        }
        console.log(chats)
        for (i = 0; i < chats.length; i++) {
            renderChat(chats[i], i)
        }
    }

    function renderChat(chat, index) {
        console.log(JSON.stringify(chat))
        const chat2 = JSON.stringify(chat)
        $('.chats').append(`
            <div onclick='trocarChat(${chat2})' class="div_conversas${index % 2 == 1 ? "2" : ""}">
                <div class="div_foto">
                    <img src="img/foto_perfil_default.png" class="foto_perfil_img" alt="">
                </div>
                <div class="div_info">
                    <div class="div_nome">${chat.user}</div>
                    <div class="div_caso">${chat.caso}</div>
                </div>
            </div>
        `)
    }

    async function trocarChat(chat) {
        $('.mensagens').empty()
        chatAtual = chat
        console.log(chat)

        document.getElementById("input_enviar").style.display = "flex"

        document.getElementById("remetente").innerHTML = `
            <div class="div_perfil_chat">
                <div class="div_foto_chat">
                    <img src="img/foto_perfil_default.png" class="foto_perfil_img" alt="">
                </div>
                <div class="div_info_chat">
                    <div class="div_nome">${chat.user}</div>
                    <div class="div_caso">${chat.caso}</div>
                </div>
                </div>

                ${
            // chat.situacao == "AGUARDANDO_RESPOSTA" advogado "botão aceitar"/ cliente nada
            // chat.situacao == "REJEITADO" advogado nada/ cliente selectcase
            // chat.situacao == "ACEITO" advogado chat futuro -> botao "gerar orcamento"/ cliente botao "finalizar vinculo" futuro -> cliente chat
            // pro futuro -> chat.situacao == "ORCAMENTO_PENDENTE" advogado chat/ cliente "aceitar orcamento"
            // pro futuro -> chat.situacao == "ORCAMENTO_ACEITO" advogado chat/ cliente botao "finalizar vinculo"
            // chat.situacao == "FINALIZADO" advogado chat/ cliente chat
            sessionStorage.getItem("userType") == "cliente" ?
                chat.situacao == "ORCAMENTO_PENDENTE" ?
                    `<button onclick="verificarOrcamento(${chat.idVinculo})" class="btn btn-lg text-light btn_all">Verificar Orcamento</button>`
                    :
                    chat.situacao == "ORCAMENTO_ACEITO" ?
                        `<button onclick="clienteFinalizarVinculo(${chat.idVinculo})" class="btn btn-lg text-light btn_all">Solicitar Encerramento</button>`
                        :
                        chat.situacao == "ADVOGADO_ENCERRADO" ?
                            `<button onclick="finalizarVinculo(${chat.idVinculo})" class="btn btn-lg text-light btn_all">Encerrar Caso</button>`
                            :
                            ""
                :
                chat.situacao == "AGUARDANDO_RESPOSTA" ?
                    `<button onclick="verificarCaso(${chat.idVinculo})" class="btn btn-lg text-light btn_all">Verificar Caso</button>`
                    :
                    chat.situacao == "ACEITO" ?
                        `<button onclick="gerarOrcamento(${chat.idVinculo})" class="btn btn-lg text-light btn_all">Gerar Orcamento</button>`
                        :
                        chat.situacao == "ORCAMENTO_REJEITADO" ?
                            `<button onclick="gerarOrcamento(${chat.idVinculo})" class="btn btn-lg text-light btn_all">Gerar Novo Orcamento</button>`
                            :
                            chat.situacao == "ORCAMENTO_ACEITO" ?
                                `<button onclick="advogadoFinalizarVinculo(${chat.idVinculo})" class="btn btn-lg text-light btn_all">Solicitar Encerramento</button>`
                                :
                                chat.situacao == "CLIENTE_ENCERRADO" ?
                                    `<button onclick="advogadoFinalizarVinculo(${chat.idVinculo})" class="btn btn-lg text-light btn_all">Confirmar Encerramento</button>`
                                    :
                                    ""
            }
        `

        mensagens = await carregarMensagens(chatAtual.idVinculo)
        console.log(mensagens)
        for (mensagem of mensagens) {
            console.log(mensagem)
            if (mensagem.remetente.idUsuario == parseInt(idUsuario)) {
                renderMyMessage(mensagem.mensagem)
            }
            else {
                renderMessage(mensagem.mensagem)
            }
        }
        document.getElementById("box_mensagens").scrollTop = document.getElementById("box_mensagens").scrollHeight
    }

    function verificarCaso(idVinculo) {
        window.location = `solicitacaovincliente?vinculo=${idVinculo}`;
    }

    function gerarOrcamento(idVinculo) {
        window.location = `orcamento?vinculo=${idVinculo}`
    }

    function verificarOrcamento(idVinculo) {
        window.location = `verificarOrcamento?vinculo=${idVinculo}`
    }

    function finalizarVinculo(idVinculo) {
        window.location = `avaliacaoadv?vinculo=${idVinculo}`;
    }

    async function advogadoFinalizarVinculo(idVinculo) {
        await fetch(`https://project-lawlinkup-5yraro2lta-uc.a.run.app/vinculo/solicitarFimAdvogado/${idVinculo}`, {
            method: "PATCH",
            headers: {
                "Content-type": "application/json; charset=UTF-8"
            }
        })
        location.reload()
    }

    async function clienteFinalizarVinculo(idVinculo) {
        await fetch(`https://project-lawlinkup-5yraro2lta-uc.a.run.app/vinculo/solicitarFimCliente/${idVinculo}`, {
            method: "PATCH",
            headers: {
                "Content-type": "application/json; charset=UTF-8"
            }
        })
        location.reload()
    }

    async function getVinculosCliente(idUsuario) {
        const retorno = await fetch(`https://project-lawlinkup-5yraro2lta-uc.a.run.app/vinculo/listarPorCliente/${idUsuario}`, {
            method: "GET",
            headers: {
                "Content-type": "application/json; charset=UTF-8"
            }
        })
        const vinculos = await retorno.json()
        console.log(vinculos)
        return vinculos
    }

    async function getVinculosAdvogado(idUsuario) {
        const retorno = await fetch(`https://project-lawlinkup-5yraro2lta-uc.a.run.app/vinculo/listarPorAdvogado/${idUsuario}`, {
            method: "GET",
            headers: {
                "Content-type": "application/json; charset=UTF-8"
            }
        })
        const vinculos = await retorno.json()
        console.log(vinculos)
        return vinculos
    }

    getUsuario(idUsuario)

    async function getUsuario(idUsuario) {
        const retorno = await fetch(`https://project-lawlinkup-5yraro2lta-uc.a.run.app/usuario/advogado/buscarPorId/${idUsuario}`, {
            method: "GET",
            headers: {
                "Content-type": "application/json; charset=UTF-8"
            }
        })
        const dadosRequisicao = await retorno.json()

        console.log(dadosRequisicao)
        loadUsuario(dadosRequisicao)

    }

    function loadUsuario(usuario) {
        document.getElementById("foto_usuario").src = usuario.fotoUrl
        document.getElementById("nome_usuario").innerHTML = usuario.nome
        document.getElementById("info_usuario").innerHTML = usuario.especializacao
    }



</script>